- title 'Changes'

= link_to 'Previous Day', changelog_path(@date.yesterday.strftime('%Y-%m-%d'))
|
= link_to 'Next Day', changelog_path(@date.tomorrow.strftime('%Y-%m-%d'))

%h1 Changes for #{@date.strftime('%A, %B %d')}

%h2 Cancellations

- if @changes.deleted_instances_for_date.empty?
  There are no cancellations for this date.
- else
  %table.table.table-hover.table-striped
    %thead
      %tr
        %th Cancelled Class Name
        %th Class Time
        %th Location
    %tbody
      - @changes.deleted_instances_for_date.each do |instance|
        %tr
          %td= markdown_html(instance[:name])
          %td= Time.zone.parse(instance[:start_time]).strftime('%l:%M %p')
          %td= instance[:location]

%h2 Additions

- if @changes.created_instances_for_date.empty?
  There are no additions for this date.
- else
  %table.table.table-hover.table-striped
    %thead
      %tr
        %th Added Class Name
        %th Start time
        %th End time
        %th Location
    %tbody
      - @changes.created_instances_for_date.each do |instance|
        %tr
          %td= markdown_html(instance[:name])
          %td= Time.zone.parse(instance[:start_time]).strftime('%l:%M %p')
          %td= Time.zone.parse(instance[:end_time]).strftime('%l:%M %p')
          %td= instance[:location]

%h2 Changes

- if @changes.changed_instances_for_date.empty?
  There are no changes for this date.
- else
  %table.table.table-hover.table-striped
    %thead
      %tr
        %th Class Name
        %th Start Time
        %th End Time
        %th Location
    %tbody
      - @changes.changed_instances_for_date.each do |instance|
        %tr
          %td= markdown_html(instance[:name])
          %td
            = Time.zone.parse(instance[:start_time].last).strftime('%A, %B %d %l:%M %p')
            - if instance[:start_time].first != instance[:start_time].last
              %br
              (was #{Time.zone.parse(instance[:start_time].first).strftime('%A, %B %d %l:%M %p')})
          %td
            = Time.zone.parse(instance[:end_time].last).strftime('%l:%M %p')
            - if instance[:end_time].first != instance[:end_time].last
              %br
              (was #{Time.zone.parse(instance[:end_time].first).strftime('%l:%M %p')})
          %td
            = instance[:location].last
            - if instance[:location].first != instance[:location].last
              %br
              (was #{instance[:location].first})
